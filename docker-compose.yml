services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_USER=${USERNAME}
      - POSTGRES_DB=${DATABASE}
  user-app:
    build:
      context: ./user
      dockerfile: Dockerfile
    container_name: user-app
    environment:
      - HOST=postgres
      - PASSWORD=${PASSWORD}
      - USERNAME=${USERNAME}
      - DATABASE=${DATABASE}
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - ./src:/app/src
  order-app:
    build:
      context: ./orders
      dockerfile: Dockerfile
    container_name: order-app
    environment:
      - HOST=postgres
      - PASSWORD=${PASSWORD}
      - USERNAME=${USERNAME}
      - DATABASE=${DATABASE}
    ports:
      - '3100:3100'
    depends_on:
      - postgres
    volumes:
      - ./src:/app/src
  products-app:
    build:
      context: ./products
      dockerfile: Dockerfile
    container_name: products-app
    environment:
      - HOST=postgres
      - PASSWORD=${PASSWORD}
      - USERNAME=${USERNAME}
      - DATABASE=${DATABASE}
    ports:
      - '3200:3200'
    depends_on:
      - postgres
    volumes:
      - ./src:/app/src
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      # - "3000:3000"
      - "4000:4000"
      - "5000:5000"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-app
      - order-app
      - products-app